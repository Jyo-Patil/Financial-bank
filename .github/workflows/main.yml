name: build and deploy

on:
  push:
    branches:
      - "develop"
      - "main"

jobs:
  build:
    
    name: Build Image
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:

    - name: Check out code
      uses: actions/checkout@v2
    - name: Install Terraform
      uses: hashicorp/setup-terraform@v3
      with:
         terraform_version: latest   
    - name: Install kubectl
      uses: azure/setup-kubectl@v2.0
      with:
        version: 'v1.24.0' # default is latest stable
      id: install  
    
    - name: Install Helm
      uses: azure/setup-helm@v1

    - name: Test with Checkov
      id: checkov
      uses: bridgecrewio/checkov-action@master
      with:
          directory: EKS
          framework: terraform 
          soft_fail: true
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.REGION }}
    - name: terraform initialization
      run: cd Infra && terraform init
    - name: terraform plan
      run: cd Infra && terraform plan 
    - name: terraform apply
      run: cd Infra && terraform destroy -auto-approve        

    
    # - name: Login to Amazon ECR
    #   id: login-ecr
    #   uses: aws-actions/amazon-ecr-login@v1

    # - name: Build, tag, and push image to Amazon ECR
    #   env:
    #     ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
    #     ECR_REPOSITORY: bankapp
    #     IMAGE_TAG: latest
    #   run: |

    #     #  docker pull tutum/hello-world
    #     #  docker tag tutum/hello-world:latest $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
    #     #  docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
    #     cd ./
    #     docker build --build-arg AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }} \
    #                    --build-arg AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }} \
    #                    --build-arg AWS_REGION=${{ secrets.AWS_REGION }} \
    #                    -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
    #     docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
    #     docker tag $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG $ECR_REGISTRY/$ECR_REPOSITORY:latest
    #     docker push $ECR_REGISTRY/$ECR_REPOSITORY:latest
    #     #docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

    # - name: Update kube config
    #   id: kube-config
    #   run: 
        
    #     aws eks update-kubeconfig --name practice-cluster --region us-east-1
    
    
    # - name: Helm Template
    #   env:
    #       KUBECONFIG: ${{ steps.kube-config.outputs.kubeconfig }}
    #   run: |
    #          cd bank-app
    #          helm upgrade --install bank-app . \
    #           --set image.repository=014498667520.dkr.ecr.us-east-1.amazonaws.com/bankapp \
    #           --set image.tag=latest \
    #           --namespace default
   
    # # - name: Deploy helm to eks
    # #   run: |
    # #       export AWS_ACCESS_KEY_ID="${{ secrets.AWS_ACCESS_KEY_ID }}"
    # #       export AWS_SECRET_ACCESS_KEY="${{ secrets.AWS_SECRET_ACCESS_KEY }}"
    # #       export AWS_REGION="${{ secrets.REGION }}"
    # #       aws eks --region us-east-1 update-kubeconfig --name practice-cluster --role-arn arn:aws:eks:us-east-1:014498667520:cluster/practice-cluster
    # #       kubectl config use-context arn:aws:eks:us-east-1:014498667520:cluster/practice-cluster
    # #       # helm upgrade --install --namespace ${KUBERNETES_NAMESPACE} --values bank-app/values.yaml ${HELM_RELEASE_NAME}-demo ./bank-app/${APP_NAME} --set image.tag=latest
    # #       helm upgrade --install bank-app . \
    # #        --set image.repository=014498667520.dkr.ecr.us-east-1.amazonaws.com/bankapp \
    # #        --set image.tag=latest \
    # #        --namespace default
   

    # # - name: Send mail
    # #   if: always()
    # #   uses: dawidd6/action-send-mail@v2
    # #   with:
    # # # mail server settings
    # #       server_address: smtp.gmail.com
    # #       server_port: 465
    # # # user credentials
    # #       username: ${{ secrets.EMAIL_USERNAME }}
    # #       password: ${{ secrets.EMAIL_PASSWORD }}
    # # # email subject
    # #       subject: ${{ github.job }} job of ${{ github.repository }} has ${{ job.status }}
    # # # email body as text
    # #       body: ${{ github.job }} job in worflow ${{ github.workflow }} of ${{ github.repository }} has ${{ job.status }}
    # # # comma-separated string, send email to
    # #       to: jyopatil221@gmail.com
    # # # from email name
    # #       from: Jyoti